# -*- coding: utf-8 -*-
"""agents/market_agent

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FMJIIXc6a9Lv13NvIo47X5RU-uMr2UYS
"""

import requests
from collections import Counter

class MarketIntelligenceAgent:
    def __init__(self, app_id=None, app_key=None):
        self.app_id = app_id
        self.app_key = app_key
        self.keywords = [
            "python","pytorch","tensorflow","deep learning","transformers","llm",
            "docker","kubernetes","aws","gcp","azure","sql","spark",
            "mlops","airflow","flask","fastapi","git"
        ]

    def fetch_jobs(self, role: str, count: int = 10):
        # If you have Adzuna API keys
        if self.app_id and self.app_key:
            url = f"https://api.adzuna.com/v1/api/jobs/gb/search/1"
            params = {
                "app_id": self.app_id,
                "app_key": self.app_key,
                "results_per_page": count,
                "what": role,
                "content-type": "application/json",
            }
            r = requests.get(url, params=params)
            data = r.json()
            return [job["description"] for job in data.get("results", [])]
        # Fallback: sample job descriptions
        return [
            "Senior AI Engineer with strong Python, PyTorch, AWS, Kubernetes.",
            "AI Research Engineer requiring TensorFlow, NLP, transformers, SQL.",
            "ML Engineer with experience in scikit-learn, PyTorch, Airflow, Docker."
        ]

    def analyze_market(self, role: str):
        jobs = self.fetch_jobs(role)
        counts = Counter()
        for desc in jobs:
            low = desc.lower()
            for kw in self.keywords:
                if kw in low:
                    counts[kw] += 1
        return {
            "role": role,
            "top_skills": counts.most_common(),
            "raw_counts": dict(counts),
        }